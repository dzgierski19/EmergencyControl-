// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Profession {
  id             String    @id @default(uuid())
  name           String
  role           Role
  workerLevel    Level
  email          String    @unique
  phoneNumber    Int       @unique
  currentEventId String?
  events         Event[]
  vehicle        Vehicle?  @relation(fields: [vehicleId], references: [id])
  vehicleId      String?
  isAvailable    Boolean   @default(true)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime?
  deletedAt      DateTime?
}

model Event {
  id             String      @id @default(uuid())
  title          String
  additionalInfo String?
  eventLevel     Level
  status         Status      @default(WAITING_FOR_ACTION)
  worker         Profession? @relation(fields: [workerId], references: [id])
  workerId       String?     @unique
  isAccepted     Boolean     @default(false)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime?
  deletedAt      DateTime?
}

model Vehicle {
  id          String       @id @default(uuid())
  role        Role
  type        VehicleType
  seats       Int
  emptySeats  Int
  isAvailable Boolean      @default(true)
  location    Location?    @relation(fields: [locationId], references: [id])
  locationId  String?      @unique
  profession  Profession[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?
}

model Location {
  id        String    @id @default(uuid())
  latitude  Float
  longitude Float
  checkedAt DateTime
  Vehicle   Vehicle[]
}

enum VehicleType {
  MOTORCYCLE
  CAR
  HELICOPTER
  MOTORBOAT
}

enum Role {
  POLICEMAN
  FIREFIGHTER
  PARAMEDIC
  SOLDIER
}

enum Status {
  WAITING_FOR_ACTION
  IN_PROGRESS
  CANCELLED
  FINISHED
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
